// <auto-generated />
using System;
using FocusPlanner.Infastructure.Data_Access;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace FocusPlanner.Infastructure.Migrations
{
    [DbContext(typeof(TaskDbContext))]
    [Migration("20241023122116_AddPropertystartenddate")]
    partial class AddPropertystartenddate
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("FocusPlanner.Core.Models.Category", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Categories");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Work"
                        },
                        new
                        {
                            Id = 2,
                            Name = "Personal"
                        },
                        new
                        {
                            Id = 3,
                            Name = "Fitness"
                        });
                });

            modelBuilder.Entity("FocusPlanner.Core.Models.Reminder", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("ReminderTime")
                        .HasColumnType("datetime2");

                    b.Property<int>("TaskId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("TaskId");

                    b.ToTable("Reminders");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            ReminderTime = new DateTime(2024, 10, 26, 13, 21, 16, 438, DateTimeKind.Local).AddTicks(8051),
                            TaskId = 1
                        },
                        new
                        {
                            Id = 2,
                            ReminderTime = new DateTime(2024, 10, 24, 12, 21, 16, 438, DateTimeKind.Local).AddTicks(8053),
                            TaskId = 2
                        });
                });

            modelBuilder.Entity("FocusPlanner.Core.Models.Task", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("CategoryId")
                        .HasColumnType("int");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("DueDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("FinishDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsCompleted")
                        .HasColumnType("bit");

                    b.Property<int>("Priority")
                        .HasColumnType("int");

                    b.Property<DateTime?>("StartDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Title")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("CategoryId");

                    b.ToTable("Tasks");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CategoryId = 1,
                            Description = "Finish the FocusPlanner project",
                            DueDate = new DateTime(2024, 10, 27, 7, 21, 16, 438, DateTimeKind.Local).AddTicks(8025),
                            FinishDate = new DateTime(2024, 10, 27, 6, 21, 16, 438, DateTimeKind.Local).AddTicks(8027),
                            IsCompleted = false,
                            Priority = 2,
                            StartDate = new DateTime(2024, 10, 24, 23, 21, 16, 438, DateTimeKind.Local).AddTicks(7984),
                            Title = "Complete Project"
                        },
                        new
                        {
                            Id = 2,
                            CategoryId = 3,
                            Description = "Complete full body workout",
                            DueDate = new DateTime(2024, 10, 25, 2, 21, 16, 438, DateTimeKind.Local).AddTicks(8032),
                            FinishDate = new DateTime(2024, 10, 25, 3, 21, 16, 438, DateTimeKind.Local).AddTicks(8034),
                            IsCompleted = false,
                            Priority = 1,
                            StartDate = new DateTime(2024, 10, 23, 16, 21, 16, 438, DateTimeKind.Local).AddTicks(8031),
                            Title = "Gym Workout"
                        });
                });

            modelBuilder.Entity("FocusPlanner.Core.Models.Reminder", b =>
                {
                    b.HasOne("FocusPlanner.Core.Models.Task", "Task")
                        .WithMany("Reminders")
                        .HasForeignKey("TaskId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Task");
                });

            modelBuilder.Entity("FocusPlanner.Core.Models.Task", b =>
                {
                    b.HasOne("FocusPlanner.Core.Models.Category", "Category")
                        .WithMany("Tasks")
                        .HasForeignKey("CategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Category");
                });

            modelBuilder.Entity("FocusPlanner.Core.Models.Category", b =>
                {
                    b.Navigation("Tasks");
                });

            modelBuilder.Entity("FocusPlanner.Core.Models.Task", b =>
                {
                    b.Navigation("Reminders");
                });
#pragma warning restore 612, 618
        }
    }
}
